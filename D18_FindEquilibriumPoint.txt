
//Using prefixSum array and suffixSum array

int equilibriumPoint(long long a[], int n) {
    long long prefix[n];
    long long suffix[n];
    prefix[0]=a[0];
    suffix[n-1]=a[n-1];
    for(int i=1;i<n;i++){
        prefix[i]=prefix[i-1]+a[i];
        suffix[n-1-i]=suffix[n-i]+a[n-i-1];
    }
    for(int i=0;i<n;i++)
        if(prefix[i] == suffix[i]) return i+1;
    
    return -1;
}

//Using prefix sum and total sum concept
int equilibriumPoint(long long a[], int n) {
    long long prefix=0,total=0;
    for(int i=0;i<n;i++) total+=a[i];
    for(int i=0;i<n;i++){
        total-=a[i];
        if(prefix == total) return i+1;
        prefix+=a[i];
    }
    return -1;
}